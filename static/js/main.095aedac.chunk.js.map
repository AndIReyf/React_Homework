{"version":3,"sources":["TodoList/TodoList.module.scss","Chat/Dialog/Dialog.module.scss","Task3/Task3.module.scss","Chat/Avatar/Avatar.module.scss","Chat/Chat.module.scss","Chat/Avatar/avatar.jpeg","common/Preloader/2.svg","common/Button/Button.tsx","Menu/Menu.tsx","App/App.tsx","serviceWorker.ts","TodoList/TodoList.tsx","common/Input/Input.tsx","Task3/Task3.tsx","Chat/Avatar/Avatar.tsx","Chat/Dialog/Dialog.tsx","Chat/Chat.tsx","common/Checkbox/Checkbox.tsx","Task4/Task4.tsx","Task5/PreJunior/PreJunior.tsx","common/EditableSpan/EditableSpan.tsx","common/Select/Select.tsx","common/Radio/Radio.tsx","Task8/homeWorkReducer.ts","Task8/Users.tsx","Task9/Clock.tsx","common/Preloader/Preloader.tsx","Redux/loading-reducer.ts","common/InputRange/InputRange.tsx","Task5/Junior/Junior.tsx","LocalStorage/LocalStorage.ts","Task5/JuniorPlus/JuniorPlus.tsx","Redux/store.ts","index.tsx"],"names":["module","exports","Button","props","className","value","btnClass","btnStyle","onClick","btnName","Menu","useState","menu","setMenu","exact","to","App","Boolean","window","location","hostname","match","TodoList","changeColorPriority","priority","backgroundColor","style","todoListBox","wrap","title","tasks","map","t","key","id","tasksList","deleteBtn","deleteTask","task","n","p","buttonBox","btn","filterTasks","Input","error","type","placeholder","onChange","onKeyPress","onBlur","autoFocus","Task3","inpValue","setInpValue","showAlert","alert","showUserName","trim","addUser","task3Box","inpBox","e","currentTarget","charCode","users","u","name","Avatar","avatarBox","avatar","src","Ava","alt","Dialog","dialogBox","message","text","time","postTime","Chat","chatBox","Checkbox","checked","setChecked","data-value","Task4","PreJunior","v1","setTasks","filter","setFilter","user","setUser","filteredTasks","newUser","EditableSpan","editMode","setEditMode","Select","options","item","index","Radio","React","radioItems","htmlFor","radioName","initialState","age","hwReducer","action","payload","newState","sort","a","b","sortAC","Users","state","setState","Clock","timerId","setTimerId","Date","date","setDate","h","getHours","m","getMinutes","s","getSeconds","getTime","d","getDate","getMonth","y","getFullYear","tId","setInterval","clearInterval","Preloader","preloader","loading","loadingAC","InputRange","memo","double","currentValue","currentValueDouble","min","minValue","max","maxValue","changeRangeValue","changeRangeValueDouble","width","Junior","dispatch","useDispatch","useSelector","selectValue","setSelectValue","rangeValue","setRangeValue","setCurrentValueDouble","slidersMode","setSlidersMode","useCallback","Math","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","setTimeout","JuniorPlus","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.095aedac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListBox\":\"TodoList_todoListBox__2fW1v\",\"wrap\":\"TodoList_wrap__21vjW\",\"tasksList\":\"TodoList_tasksList__3ZiZL\",\"task\":\"TodoList_task__2YqL3\",\"priority\":\"TodoList_priority__WlAMf\",\"deleteBtn\":\"TodoList_deleteBtn__1DHGB\",\"buttonBox\":\"TodoList_buttonBox__nG7rG\",\"btn\":\"TodoList_btn__VgzKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBox\":\"Dialog_dialogBox__lPFot\",\"name\":\"Dialog_name__3gfYl\",\"text\":\"Dialog_text__3Q3jc\",\"time\":\"Dialog_time__1BF8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task3Box\":\"Task3_task3Box__1KU7j\",\"inpBox\":\"Task3_inpBox__1Ww0r\",\"name\":\"Task3_name__I8FPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarBox\":\"Avatar_avatarBox__3QFVM\",\"avatar\":\"Avatar_avatar__O24P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBox\":\"Chat_chatBox__2RjxZ\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.c3f042ec.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/2.16ee53fb.svg\";","import React from \"react\";\r\nimport './Button.scss';\r\n\r\ntype PropsType = {\r\n    btnStyle?: string\r\n    btnName?: string\r\n    onClick: () => void\r\n}\r\n\r\nexport function Button(props: PropsType) {\r\n\r\n    const btnClass = (value: string | undefined) => {\r\n        switch (value) {\r\n            case 'Add': {\r\n                return `btn ${value}`;\r\n            }\r\n            case 'Del': {\r\n                return `btn ${value}`;\r\n            }\r\n            default: {\r\n                return `btn`;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'btnBox'}>\r\n            <button className={btnClass(props.btnStyle)}\r\n                    onClick={props.onClick}>\r\n                {props.btnName}\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport './Menu.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../common/Button/Button\";\r\n\r\ntype PropsType = {}\r\n\r\nexport function Menu(props: PropsType) {\r\n\r\n    const btnName: string = 'Menu';\r\n    const [menu, setMenu] = useState(false);\r\n    const onClick = () => menu ? setMenu(false) : setMenu(true);\r\n\r\n    return (\r\n        <div className={`menu ${menu ? 'active' : ''}`}>\r\n            <Button onClick={onClick} btnName={btnName}/>\r\n            <NavLink exact to=\"/\">Home</NavLink>\r\n            <NavLink to=\"/preJunior\">PreJunior</NavLink>\r\n            <NavLink to=\"/junior\">Junior</NavLink>\r\n            <NavLink to=\"/juniorPlus\">Junior Plus</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Menu} from \"../Menu/Menu\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Home Page</h1>\r\n            <Menu/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport style from './TodoList.module.scss';\r\nimport {FilterType} from \"../Task5/PreJunior/PreJunior\";\r\n\r\nexport type TitleType = string\r\nexport type TaskType = {\r\n    id: string\r\n    n: string\r\n    p: string\r\n}\r\ntype PropsType = {\r\n    tasks: Array<TaskType>\r\n    title: TitleType\r\n    deleteTask: (id: string) => void\r\n    filterTasks: (value: FilterType) => void\r\n}\r\n\r\nexport function TodoList(props: PropsType) {\r\n\r\n    const changeColorPriority = (priority: string) => {\r\n        switch (priority) {\r\n            case 'low': {\r\n                return {\r\n                    backgroundColor: '#bada55'\r\n                }\r\n            }\r\n            case 'middle': {\r\n                return {\r\n                    backgroundColor: '#e3d91b'\r\n                }\r\n            }\r\n            case 'high': {\r\n                return {\r\n                    backgroundColor: '#dd2222'\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.todoListBox}>\r\n            <div className={style.wrap}>\r\n            <h1 className={style.title}>{props.title}</h1>\r\n            <ul>\r\n                {\r\n                    props.tasks.map(t => <li key={t.id} className={style.tasksList}>\r\n                        <button className={style.deleteBtn}\r\n                                onClick={() => {props.deleteTask(t.id)}}>\r\n                            <span> </span>\r\n                        </button>\r\n                        <span className={style.task}>{t.n}</span>\r\n                        <span style={changeColorPriority(t.p)} className={style.priority}>{t.p}</span>\r\n                    </li>)\r\n                }\r\n            </ul>\r\n            <div className={style.buttonBox}>\r\n                <button className={style.btn} onClick={() => {props.filterTasks('all')}}>All</button>\r\n                <button className={style.btn} onClick={() => {props.filterTasks('low')}}>Low</button>\r\n                <button className={style.btn} onClick={() => {props.filterTasks('middle')}}>Middle</button>\r\n                <button className={style.btn} onClick={() => {props.filterTasks('high')}}>High</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, FocusEvent, KeyboardEvent} from \"react\";\r\nimport './Input.scss';\r\n\r\ntype PropsType = {\r\n    error?: boolean\r\n    placeholder?: string\r\n    type: string\r\n    value: string\r\n    autoFocus?: boolean\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyPress?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport function Input(props: PropsType) {\r\n\r\n    const isInpEmpty = (value: string) => value === '';\r\n    const inpError = (error: boolean | undefined) => {\r\n        if (error && !isInpEmpty(props.value)) {\r\n            return 'inp error';\r\n        } else {\r\n            return 'inp';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'inputBox'}>\r\n            <input className={inpError(props.error)}\r\n                   type={props.type}\r\n                   value={props.value}\r\n                   placeholder={props.placeholder}\r\n                   onChange={props.onChange}\r\n                   onKeyPress={props.onKeyPress}\r\n                   onBlur={props.onBlur}\r\n                   autoFocus={props.autoFocus}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport style from './Task3.module.scss';\r\nimport {Button} from \"../common/Button/Button\";\r\nimport {Input} from \"../common/Input/Input\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    addUser: (value: string) => void\r\n}\r\n\r\nexport type UserType = {\r\n    id?: string\r\n    name?: string\r\n}\r\n\r\nexport function Task3(props: PropsType) {\r\n\r\n    const placeholderValue: string = 'Enter your name...';\r\n    const typeInput: string = 'text';\r\n    const btnName: string = 'Add name';\r\n    const [inpValue, setInpValue] = useState<string>('');\r\n    const isInpEmpty = (value: string) => value.trim() === '';\r\n    const showAlert = (value: string) => {\r\n        setInpValue('');\r\n        alert(value);\r\n    }\r\n    const showErrorAlert = () => showAlert('Input is empty. Please enter your name!');\r\n    const showSuccessAlert = (name: string) =>  showAlert(`Hi ${name.trim()}, welcome to samurai's way!`);\r\n    const showUserName = () => {\r\n        if (isInpEmpty(inpValue)) {\r\n            showErrorAlert();\r\n        }\r\n        else {\r\n            props.addUser(inpValue);\r\n            showSuccessAlert(inpValue);\r\n        }\r\n    }\r\n    const onInpValueChange = (e: ChangeEvent<HTMLInputElement>) => setInpValue(e.currentTarget.value);\r\n    const onKeyPressInInput = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            showUserName();\r\n        }\r\n    }\r\n    const addNewUserName = () => showUserName();\r\n\r\n    return (\r\n        <div className={style.task3Box}>\r\n            <h3>Task3</h3>\r\n            <div className={style.inpBox}>\r\n                <Input placeholder={placeholderValue}\r\n                       type={typeInput}\r\n                       value={inpValue}\r\n                       onChange={onInpValueChange}\r\n                       onKeyPress={onKeyPressInInput}\r\n                />\r\n                <Button btnStyle={'Add'}\r\n                        btnName={btnName}\r\n                        onClick={addNewUserName}\r\n                />\r\n            </div>\r\n            <ul>\r\n                {\r\n                    props.users.map(u => <li key={u.id} className={style.name}>\r\n                        {u.name}\r\n                    </li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Ava from \"./avatar.jpeg\";\r\nimport style from \"./Avatar.module.scss\";\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <div className={style.avatarBox}>\r\n            <img className={style.avatar} src={Ava} alt=\"Avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from \"react\";\r\nimport style from \"./Dialog.module.scss\";\r\n\r\ntype MessageType = {\r\n    name: string,\r\n    text: string,\r\n    postTime: string\r\n}\r\n\r\ntype PropsType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Dialog = (props: PropsType) => {\r\n    return (\r\n        <div className={style.dialogBox}>\r\n            <div>\r\n                <div className={style.name}>{props.message[0].name}</div>\r\n                <div className={style.text}>{props.message[0].text}</div>\r\n            </div>\r\n            <div className={style.time}>{props.message[0].postTime}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport style from \"./Chat.module.scss\";\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\n\r\nconst Chat = () => {\r\n\r\n    const message = [\r\n        {name: 'Andrey', text: 'I love React!', postTime: '12:30'}\r\n    ];\r\n\r\n    return (\r\n        <div className={style.chatBox}>\r\n            <Avatar/>\r\n            <Dialog message={message} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React, {useState} from \"react\";\r\nimport './Checkbox.scss';\r\n\r\ntype PropsType = {}\r\n\r\nexport function Checkbox(props: PropsType) {\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const isChecked = () => checked ? setChecked(false) : setChecked( true);\r\n\r\n    return (\r\n        <div className={'checkboxContainer'}>\r\n            <div data-value={checked}\r\n                 className={'checkbox'}\r\n                 onClick={isChecked}>\r\n                {\r\n                    checked && <div className={'check'}> </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport './Task4.css';\r\nimport {Button} from \"../common/Button/Button\";\r\nimport {Input} from \"../common/Input/Input\";\r\nimport {Checkbox} from \"../common/Checkbox/Checkbox\";\r\n\r\ntype BtnType = 'Add' | 'Del' | string;\r\n\r\nexport function Task4() {\r\n\r\n    const type = 'text';\r\n    const btnStyle: BtnType = 'Del';\r\n    const error: boolean = true;\r\n    const placeholderText: string = 'Enter here...';\r\n    const [inpValue, setInpValue] = useState('');\r\n    const onInpValueChange = (e: ChangeEvent<HTMLInputElement>) => setInpValue(e.currentTarget.value);\r\n\r\n    return (\r\n        <div className={'task4'}>\r\n            <Checkbox />\r\n            <Input error={error}\r\n                   type={type}\r\n                   value={inpValue}\r\n                   placeholder={placeholderText}\r\n                   onChange={onInpValueChange}\r\n            />\r\n            <Button btnStyle={btnStyle}\r\n                    onClick={() => {}}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport './PreJunior.scss';\r\nimport {TaskType, TitleType, TodoList} from \"../../TodoList/TodoList\";\r\nimport {Task3, UserType} from \"../../Task3/Task3\";\r\nimport {v1} from \"uuid\";\r\nimport Chat from \"../../Chat/Chat\";\r\nimport {Task4} from \"../../Task4/Task4\";\r\nimport {Menu} from \"../../Menu/Menu\";\r\n\r\nexport type FilterType = 'all' | 'low' | 'middle' | 'high';\r\n\r\nexport function PreJunior() {\r\n\r\n    const title: TitleType = 'My tasks to do';\r\n    let [tasks, setTasks] = useState<Array<TaskType>>([\r\n        {id: v1(), n: \"Work\", p: \"high\"},\r\n        {id: v1(), n: \"Anime\", p: \"low\"},\r\n        {id: v1(), n: \"Games\", p: \"middle\"},\r\n        {id: v1(), n: \"React\", p: \"high\"},\r\n        {id: v1(), n: \"HTML&SCSS\", p: \"low\"}\r\n    ])\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n    const [user, setUser] = useState<Array<UserType>>([]);\r\n    const deleteTask = (id: string) => setTasks(tasks.filter(t => t.id !== id));\r\n    const filterTasks = (value: FilterType) => setFilter(value);\r\n    let filteredTasks = tasks;\r\n    switch (filter) {\r\n        case \"low\": {\r\n            filteredTasks = tasks.filter(t => t.p === 'low');\r\n            break;\r\n        }\r\n        case \"middle\": {\r\n            filteredTasks = tasks.filter(t => t.p === 'middle');\r\n            break;\r\n        }\r\n        case \"high\": {\r\n            filteredTasks = tasks.filter(t => t.p === 'high');\r\n            break;\r\n        }\r\n    }\r\n    const addUser = (value: string) => {\r\n        let newUser = {id: v1(), name: value};\r\n        setUser([newUser, ...user]);\r\n    }\r\n\r\n    return (\r\n        <div className={'preJunior'}>\r\n            <h1>PreJunior Page</h1>\r\n            <Menu/>\r\n            <Chat/>\r\n            <TodoList tasks={filteredTasks}\r\n                      title={title}\r\n                      deleteTask={deleteTask}\r\n                      filterTasks={filterTasks}\r\n            />\r\n            <Task3 users={user}\r\n                   addUser={addUser}\r\n            />\r\n            <Task4/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, FocusEvent, useState} from \"react\";\r\nimport './EditableSpan.scss';\r\nimport {Input} from \"../Input/Input\";\r\n\r\ntype PropsType = {\r\n    type: string\r\n    value: string\r\n    autoFocus: boolean\r\n    setInpValue: (value: string) => void\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onBlur: (e: FocusEvent<HTMLInputElement>) => void\r\n    onKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport function EditableSpan(props: PropsType) {\r\n\r\n    const defaultStatus: string = 'Add your status...';\r\n    const [editMode, setEditMode] = useState(false);\r\n    const setStatus = () => props.value.trim() ? props.value : defaultStatus;\r\n    const changeStatusBlur = (e: FocusEvent<HTMLInputElement>) => {\r\n        props.onBlur(e);\r\n        setEditMode(false)\r\n    }\r\n    const changeStatusKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            props.onKeyPress(e);\r\n            setEditMode(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !editMode\r\n                    ? <span className={'status'} onClick={() => {\r\n                        setEditMode(true)\r\n                    }}>\r\n                        {setStatus()}\r\n                    </span>\r\n                    : <Input\r\n                        type={props.type}\r\n                        value={props.value}\r\n                        onBlur={changeStatusBlur}\r\n                        onKeyPress={changeStatusKeyPress}\r\n                        onChange={props.onChange}\r\n                        autoFocus={props.autoFocus}/>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\nexport type OptionsType = Array<string>\r\ntype PropsType = {\r\n    options: OptionsType\r\n    value: string\r\n    onChange: (e: ChangeEvent<HTMLSelectElement>) => void\r\n}\r\n\r\nexport function Select(props: PropsType) {\r\n    return (\r\n        <div className={`Select`}>\r\n            <h3>Native Select</h3>\r\n            <select onChange={props.onChange} value={props.value}>\r\n                {\r\n                    props.options.map((item, index) => {\r\n                        return (\r\n                            <option value={item} key={index}>\r\n                                {item}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport type RadioItemsType = Array<string>\r\ntype PropsType = {\r\n    radioItems: RadioItemsType\r\n    radioName: string\r\n}\r\n\r\nexport function Radio(props: PropsType) {\r\n\r\n    const [checked, setChecked] = React.useState<number | null>(null)\r\n\r\n    return (\r\n        <div>\r\n            <h3>Native Radio</h3>\r\n            {\r\n                props.radioItems.map((item, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <label htmlFor={item}>\r\n                                <input\r\n                                    checked={checked === index}\r\n                                    onChange={() => setChecked(index)}\r\n                                    value={item}\r\n                                    name={props.radioName}\r\n                                    id={item}\r\n                                    type=\"radio\"/>\r\n                                {item}\r\n                            </label>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","export type StateType = {\r\n    id: string\r\n    name: string\r\n    age: number\r\n}\r\ntype ActionType = SortType | SortByAgeType\r\ntype PayloadType = 'up' | 'down'\r\ntype SortType = {\r\n    type: 'SORT'\r\n    payload: PayloadType\r\n}\r\ntype SortByAgeType = {\r\n    type: 'CHECK'\r\n    payload: number\r\n}\r\n\r\nexport const initialState: Array<StateType> = [\r\n    {id: '1', name: 'Bob', age: 18},\r\n    {id: '2', name: 'Andy', age: 30},\r\n    {id: '3', name: 'Max', age: 13}\r\n]\r\n\r\nexport const hwReducer = (initialState: Array<StateType>, action: ActionType): Array<StateType> => {\r\n    switch (action.type) {\r\n        case \"SORT\": {\r\n            if (action.payload === 'up') {\r\n                const newState = initialState.sort(function (a, b): any {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                return [...newState]\r\n            }\r\n            const newState = initialState.sort(function (a, b): any {\r\n                if (a.name > b.name) {\r\n                    return -1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n            return [...newState]\r\n        }\r\n        case \"CHECK\": {\r\n            return initialState.filter(item => item.age >= action.payload)\r\n        }\r\n        default:\r\n            return [...initialState]\r\n    }\r\n};\r\n\r\nexport const sortAC = (payload: PayloadType): SortType => {\r\n    return {type: \"SORT\", payload}\r\n}\r\nexport const sortByAgeAC = (payload: number): SortByAgeType => {\r\n    return {type: \"CHECK\", payload}\r\n}","import React from \"react\";\r\nimport {hwReducer, initialState, sortAC, sortByAgeAC} from \"./homeWorkReducer\";\r\n\r\ntype PropsType = {}\r\n\r\nexport function Users(props: PropsType) {\r\n\r\n    const sortPayloadUp = 'up'\r\n    const sortPayloadDown = 'down'\r\n    const sortPayloadAge = 18\r\n\r\n    const [state, setState] = React.useState(initialState)\r\n    const sortUp = () => setState(hwReducer(state, sortAC(sortPayloadUp)))\r\n    const sortDown = () => setState(hwReducer(state, sortAC(sortPayloadDown)))\r\n    const sortByAge = () => setState(hwReducer(state, sortByAgeAC(sortPayloadAge)))\r\n\r\n    return (\r\n        <div>\r\n            <h3>Task 8</h3>\r\n            {\r\n                state.map(item => {\r\n                    return (\r\n                        <div key={item.id}>\r\n                            <span>{item.name} </span>\r\n                            <span> {item.age}</span>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div>\r\n                <button onClick={sortUp}>Sort Up</button>\r\n                <button onClick={sortDown}>Sort Down</button>\r\n                <button onClick={sortByAge}>Sort +18</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './Clock.scss'\r\nimport {Button} from \"../common/Button/Button\";\r\n\r\ntype PropsType = {}\r\n\r\nexport function Clock(props: PropsType) {\r\n\r\n    const [timerId, setTimerId] = React.useState(0);\r\n    const [date, setDate] = React.useState(new Date());\r\n\r\n    const getDate = () => {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        let d = date.getDate()\r\n        let m = date.getMonth()\r\n        let y = date.getFullYear()\r\n        return `${d} ${monthNames[m]} ${y}`\r\n    }\r\n    const getTime = () => {\r\n        let h = date.getHours()\r\n        let m = date.getMinutes()\r\n        let s = date.getSeconds()\r\n        return `${h}:${m}:${s}`\r\n    }\r\n    const timer = () => {\r\n        const tId = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n        setTimerId(tId)\r\n    }\r\n    const stopTimer = () => clearInterval(timerId)\r\n\r\n    return (\r\n        <div className={'Clock'}>\r\n            <h3>Task 9</h3>\r\n            <div className={'clockTimer'}>\r\n                <div>{getTime()}</div>\r\n                <div className={'Date'}>{getDate()}</div>\r\n            </div>\r\n            <div className={'clockBtn'}>\r\n                <Button btnName={'Start'} onClick={timer}/>\r\n                <Button btnName={'Stop'} onClick={stopTimer}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './Preloader.scss'\r\nimport preloader from './2.svg'\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={'Preloader'}>\r\n            <img src={preloader} alt=\"Loading\"/>\r\n        </div>\r\n    )\r\n}","type ActionType = LoadingType\r\ntype LoadingType = {\r\n    type: 'SET_LOADING'\r\n    loading: boolean\r\n}\r\nexport type StateType = {\r\n    loading: boolean\r\n}\r\n\r\nconst initialState = {\r\n    loading: false\r\n}\r\n\r\nexport const loadingReducer = (state: StateType = initialState, action: ActionType):StateType => {\r\n    switch (action.type) {\r\n        case \"SET_LOADING\": return {...state, loading: action.loading}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const loadingAC = (loading: boolean):LoadingType => ({type:'SET_LOADING', loading})","import React, {ChangeEvent} from \"react\";\r\nimport './InputRange.scss'\r\n\r\ntype PropsType = {\r\n    minValue: number\r\n    maxValue: number\r\n    currentValue: number\r\n    currentValueDouble: number\r\n    changeRangeValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeRangeValueDouble: (e: ChangeEvent<HTMLInputElement>) => void\r\n    double: boolean\r\n}\r\n\r\nexport const InputRange = React.memo(function InputRange(props: PropsType) {\r\n\r\n    const setRangeValueColor = (value: number) => {\r\n        if (value < (props.maxValue * 25 / 100)) return 'blue'\r\n        if (value >= (props.maxValue * 25 / 100) && value < (props.maxValue * 50 / 100)) return 'purple'\r\n        if (value >= (props.maxValue * 50 / 100) && value < (props.maxValue * 75 / 100)) return 'violet'\r\n        if (value >= (props.maxValue * 75 / 100)) return 'pink'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.double\r\n                    ? <div className={'rangeDouble'}>\r\n                        <div className={'wrap'}>\r\n                            <span className={'priceBefore'}>{props.currentValue}</span>\r\n                            <span className={'priceAfter'}>{props.currentValueDouble}</span>\r\n                            <input\r\n                                className={'range left'}\r\n                                type=\"range\"\r\n                                value={props.currentValue}\r\n                                min={props.minValue} max={props.maxValue} onChange={props.changeRangeValue}/>\r\n                            <input\r\n                                className={'range right'}\r\n                                type=\"range\"\r\n                                value={props.currentValueDouble}\r\n                                min={props.minValue} max={props.maxValue} onChange={props.changeRangeValueDouble}/>\r\n                            <div className=\"slider\">\r\n                                <div className=\"track\"> </div>\r\n                                <div className=\"range\"> </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : <div className={'rangeSingle'}>\r\n                        <div className={'wrap'}>\r\n                            <span className={`rangeValue ${setRangeValueColor(props.currentValue)}`}>\r\n                                {props.currentValue}\r\n                            </span>\r\n                            <div className={'rangeBefore'}> </div>\r\n                            <input className={'range'}\r\n                                   type=\"range\"\r\n                                   value={props.currentValue}\r\n                                   min={props.minValue}\r\n                                   max={props.maxValue}\r\n                                   onChange={props.changeRangeValue}/>\r\n                            <div className={'rangeAfter'}\r\n                                 style={{width: 100 - (props.currentValue * 100) / props.maxValue + '%'}}> </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n})","import React, {ChangeEvent, FocusEvent, KeyboardEvent, useState} from \"react\";\r\nimport './Junior.scss';\r\nimport {Menu} from \"../../Menu/Menu\";\r\nimport {EditableSpan} from \"../../common/EditableSpan/EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {restoreState, saveState} from \"../../LocalStorage/LocalStorage\";\r\nimport {OptionsType, Select} from \"../../common/Select/Select\";\r\nimport {Radio, RadioItemsType} from \"../../common/Radio/Radio\";\r\nimport {Users} from \"../../Task8/Users\";\r\nimport {Clock} from \"../../Task9/Clock\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../Redux/store\";\r\nimport {loadingAC, StateType} from \"../../Redux/loading-reducer\";\r\nimport {InputRange} from \"../../common/InputRange/InputRange\";\r\n\r\ntype PropsType = {}\r\n\r\nexport function Junior(props: PropsType) {\r\n\r\n    const saveBtn: string = 'Save';\r\n    const restoreBtn: string = 'Restore';\r\n    const autoFocus: boolean = true;\r\n    const typeInp: string = 'text';\r\n    const radioName: string = 'radio';\r\n    const selectOptions: OptionsType = ['Andy', 'Den', 'Gab', 'John']\r\n    const radioItems: RadioItemsType = ['Andy', 'Den', 'Gab', 'John']\r\n    const maxValue: number = 100;\r\n\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector<AppRootType, StateType>(state => state.loading)\r\n    const [selectValue, setSelectValue] = useState('')\r\n    const [inpValue, setInpValue] = useState('');\r\n    const [rangeValue, setRangeValue] = React.useState(0);\r\n    const [currentValueDouble, setCurrentValueDouble] = React.useState(maxValue);\r\n    const [slidersMode, setSlidersMode] = React.useState(false)\r\n\r\n    const onInpValueChange = (e: ChangeEvent<HTMLInputElement>) => setInpValue(e.currentTarget.value);\r\n    const onKeyPressInInp = (e: KeyboardEvent<HTMLInputElement>) => setInpValue(e.currentTarget.value);\r\n    const onBlur = (e: FocusEvent<HTMLInputElement>) => setInpValue(e.currentTarget.value);\r\n    const saveStatus = () => saveState('status', inpValue)\r\n    const restoreStatus = () => setInpValue(restoreState('status', 'Default status ;)'))\r\n    const changeSelectValue = (e: ChangeEvent<HTMLSelectElement>) => setSelectValue(e.currentTarget.value)\r\n    const startLoad = () => {\r\n        dispatch(loadingAC(true))\r\n        setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n        }, 3000)\r\n    }\r\n    const changeRangeValue = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        slidersMode\r\n            ? setRangeValue(Math.min(+e.currentTarget.value, currentValueDouble - 5))\r\n            : setRangeValue(+e.currentTarget.value)\r\n    }, [rangeValue])\r\n    const changeRangeValueDouble = React.useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setCurrentValueDouble(Math.max(+e.currentTarget.value, rangeValue + 5));\r\n    }, [currentValueDouble])\r\n    const changeRangeMode = () => {\r\n        setRangeValue(0)\r\n        setCurrentValueDouble(maxValue)\r\n        setSlidersMode(!slidersMode)\r\n    }\r\n\r\n    return (\r\n        <div className={'junior'}>\r\n            <h1>Junior Page</h1>\r\n            <Menu/>\r\n            {\r\n                loading.loading\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <EditableSpan\r\n                            type={typeInp}\r\n                            value={inpValue}\r\n                            onChange={onInpValueChange}\r\n                            onKeyPress={onKeyPressInInp}\r\n                            onBlur={onBlur}\r\n                            setInpValue={setInpValue}\r\n                            autoFocus={autoFocus}\r\n                        />\r\n                        <div className={'btnContainer'}>\r\n                            <Button\r\n                                btnName={saveBtn}\r\n                                onClick={saveStatus}/>\r\n                            <Button\r\n                                btnName={restoreBtn}\r\n                                onClick={restoreStatus}/>\r\n                        </div>\r\n                        <Select\r\n                            onChange={changeSelectValue}\r\n                            value={selectValue}\r\n                            options={selectOptions}/>\r\n                        <hr/>\r\n                        <Radio\r\n                            radioName={radioName}\r\n                            radioItems={radioItems}/>\r\n                        <hr/>\r\n                        <Users/>\r\n                        <hr/>\r\n                        <Clock/>\r\n                        <hr/>\r\n                        <h3>Task 10</h3>\r\n                        <Button btnName={'Loading'} onClick={startLoad}/>\r\n                        <hr/>\r\n                        <h3>Task 11</h3>\r\n                        <div className={'wrap'}>\r\n                            <div className={'btnContainer'}>\r\n                                <Button btnName={'Change Range'} onClick={changeRangeMode}/>\r\n                            </div>\r\n                            <InputRange currentValue={rangeValue}\r\n                                        currentValueDouble={currentValueDouble}\r\n                                        minValue={0}\r\n                                        maxValue={maxValue}\r\n                                        double={slidersMode}\r\n                                        changeRangeValueDouble={changeRangeValueDouble}\r\n                                        changeRangeValue={changeRangeValue}/>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","export function saveState<T> (key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}","import React from \"react\";\r\nimport './JuniorPlus.scss';\r\nimport {Menu} from \"../../Menu/Menu\";\r\n\r\ntype PropsType = {}\r\n\r\nexport function JuniorPlus(props: PropsType) {\r\n    return (\r\n        <div className={'juniorPlus'}>\r\n            <h1>Junior Plus Page</h1>\r\n            <Menu/>\r\n        </div>\r\n    )\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {loadingReducer} from \"./loading-reducer\";\r\n\r\nexport type AppRootType = ReturnType<typeof rootReducer>\r\n\r\nconst rootReducer = combineReducers({\r\n    loading: loadingReducer\r\n})\r\nexport const store = createStore(rootReducer)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {PreJunior} from \"./Task5/PreJunior/PreJunior\";\r\nimport {Junior} from \"./Task5/Junior/Junior\";\r\nimport {JuniorPlus} from \"./Task5/JuniorPlus/JuniorPlus\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <Route exact path={'/'} render={() => <App/>}/>\r\n                <Route path={'/preJunior'} render={() => <PreJunior/>}/>\r\n                <Route path={'/junior'} render={() => <Junior/>}/>\r\n                <Route path={'/juniorPlus'} render={() => <JuniorPlus/>}/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}